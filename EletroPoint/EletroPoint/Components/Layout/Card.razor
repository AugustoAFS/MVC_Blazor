@page "/eletronicos"
@using EletroPoint.Models
@inject HttpClient Http

<h3>Eletrônicos</h3>

@if (isLoading)
{
    <p>Carregando eletrônicos...</p>
}
else if (!string.IsNullOrEmpty(errorMessage))
{
    <p style="color: red;">@errorMessage</p>
}
else
{
    <div class="Card-container">
        @foreach (var eletronico in eletronicos)
        {
            <div class="Card">
                <p>@eletronico.Nome</p>
                <p>@eletronico.Cor</p>
                <p>@eletronico.Descricao</p>
            </div>
        }

        @if (eletronicos.Count == 0)
        {
            <p>Não há eletrônicos disponíveis.</p>
        }
    </div>
}

@code {
    private List<EletronicosModel> eletronicos = new List<EletronicosModel>();
    private bool isLoading = true;
    private string errorMessage = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        // Chama o método para carregar os dados ao inicializar
        await LoadEletronicos();
    }

    private async Task LoadEletronicos()
    {
        try
        {
            var response = await Http.GetFromJsonAsync<List<EletronicosModel>>("api/eletronicos");

            if (response != null)
            {
                eletronicos = response;
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Erro ao carregar os eletrônicos: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }
}
